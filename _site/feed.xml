<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding With The Flow</title>
    <description>The personal encounters I have in my experiences as a programmer, and tinkerer.
</description>
    <link>http://0.0.0.0:4000/</link>
    <atom:link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 02 Jan 2017 12:41:41 -0500</pubDate>
    <lastBuildDate>Mon, 02 Jan 2017 12:41:41 -0500</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>My 2016 Gists</title>
        <description>&lt;p&gt;Over the year I have collected a lot of gists of things that I constantly am looking up. If you’re not familiar with what a gist is start &lt;a href=&quot;https://gist.github.com/&quot;&gt;here&lt;/a&gt;. Basically it’s like pastebin but for code and other snippets that might be useful for saving for later or sharing with other coders.&lt;/p&gt;

&lt;p&gt;At any rate though here are a few of the ones that I cobbled together to save myself some googleing.&lt;/p&gt;

&lt;h1 id=&quot;how-to-add-your-ssh-keys-in-one-line&quot;&gt;&lt;a href=&quot;https://gist.github.com/DerfOh/b65efff31b12c5049077de66fcd86493&quot;&gt;How to add your ssh keys in one line&lt;/a&gt;&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cat ~/.ssh/id_rsa.pub | ssh user@hostname &lt;span class=&quot;s2&quot;&gt;&quot;mkdir -p ~/.ssh &amp;amp;&amp;amp; cat &amp;gt;&amp;gt;  ~/.ssh/authorized_keys&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;cygwin-ctrlarrow-key-fix&quot;&gt;&lt;a href=&quot;https://gist.github.com/DerfOh/fbf389fc33ee37d7b8675e55b6bcbe96&quot;&gt;Cygwin ctrl+arrow key fix&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Add the following lines to ~/.inputrc (C:\cygwin\home&amp;lt;username&amp;gt;.inputrc):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[1;5C&quot;&lt;/span&gt;: forward-word   &lt;span class=&quot;c&quot;&gt;# ctrl + right&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\e&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[1;5D&quot;&lt;/span&gt;: backward-word  &lt;span class=&quot;c&quot;&gt;# ctrl + left &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;set-execution-mode-of-a-script-using-git&quot;&gt;&lt;a href=&quot;https://gist.github.com/DerfOh/013482021cc1079e6bb3b2907141bb2e&quot;&gt;Set execution mode of a script using git&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Change execution mode of a shell script so that it doesn’t get changed after git pull&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-git&quot; data-lang=&quot;git&quot;&gt;git update-index --chmod=+x foo.sh

git ls-files --stage&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;convert-all-files-in-a-directory-to-unix-format&quot;&gt;&lt;a href=&quot;https://gist.github.com/DerfOh/0bf79edfa7569e66e9354c1cc1f5d336&quot;&gt;Convert all files in a directory to Unix format&lt;/a&gt;&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Set up dos2unix&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Run the following in the directory&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;find . -type f -exec dos2unix &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;parse-json-in-one-line-shell-script&quot;&gt;&lt;a href=&quot;https://gist.github.com/DerfOh/3eaba48efcd54834ba0eb667ab23a3cb&quot;&gt;Parse json in one line shell script&lt;/a&gt;&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$foo&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | awk -F&lt;span class=&quot;s2&quot;&gt;&quot;[,:]&quot;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{for(i=1;i&amp;lt;=NF;i++){if($i~/bar\042/){print $(i+1)} } }'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Mon, 02 Jan 2017 12:07:00 -0500</pubDate>
        <link>http://0.0.0.0:4000/check-in/reflections/2017/01/02/My-2016-gists.html</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/check-in/reflections/2017/01/02/My-2016-gists.html</guid>
        
        <category>tips</category>
        
        
        <category>check-in</category>
        
        <category>reflections</category>
        
      </item>
    
      <item>
        <title>Google vs Docker Cloud</title>
        <description>&lt;p&gt;I am sure many will agree that I have only started to dip my toes in the water of cloud containers but I find that my experiences between Docker Cloud and Kubernetes/Google Cloud to be very different.&lt;/p&gt;

&lt;h3 id=&quot;google-cloud-platform&quot;&gt;Google Cloud Platform&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The good&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;There are free containers that you can use. Google offers up to 3 containers in their repository that they will host for free. This actually comes at a cost for Docker Cloud along with the added cost of the hosting for that container.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;You get the satisfaction and utility of a tried and true containerized service delivery platform that will not have any decline in support in the foreseeable future.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The bad&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;You are pretty much locked into using Linux/Mac. If you’re a windows person the Kubernetes tools aren’t the easiest to set up and get going. You can easily get around this however if you are comfortable with running a virtual machine and if you’re working with containers you’re already more likely to be developing off of one of these systems anyway.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;I found the toolkit to be multi layered and complex. This added onto the already complex nature of container technology was a bit too much added informational overhead. It took almost 2 whole hours and a few different reference documents to get something similar to a docker container running on one of the nodes. The process involved creating a cluster, then going onto a Linux machine to build and push the docker image to Google cloud. Once the image was there I had to then install the Kubernetes toolkit locally on my machine so that I could see a ui in which I deployed the docker image. This was entirely confusing as I didn’t understand why Google could not have just hosted that on their own systems rather than making me do additional unnecessary configuration.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;docker-cloud&quot;&gt;Docker Cloud&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The good&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;The integration with the Docker hub repository is seamless. I can push an image that I built locally up to the repository, then as soon as changes are detected the image is then redeployed on the server.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Host integration was very easy for me. I use digital ocean for most of my personal needs and creating a dedicated docker droplet was very easy to do. Their documentation was very strait forward and made it very easy for me to integrate the two providers in a very conventional way. Along with this integration Docker Cloud automatically provisions and manages scaling up your infrastructure in a very simple and strait forward interface.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Triggers, environment variables, and everything else you can imagine is easily configured from their dashboard. I found that Kubernetes didn’t even come close to scratching the surface of configurable that the Docker Cloud ui had brought to the table.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The bad&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;The added overhead cost is one thing that always gets to me with Docker Cloud. Not only do I have to pay for the service, the private repositories for Dockerhub, but I also have to pay for the server along with it all. This whole stack can add up to quite a big chunk of cash if you get carried away with the amount of projects and sites you’re hosting with this setup.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Docker is a relatively new product in comparison to the engineering that goes on at Google. It is still in it’s infancy too. It is still very rare to see large sites running their infrastructure from Docker Cloud so there are really no well defined best practices for doing it. Finally with being new means there are bound to be large changes yet in the development pipeline. These changes while good may also bring along with them volatile reliability for the service.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In retrospect I am most comfortable using Docker Cloud for my provisioning and management of my containers. The most valuable aspect for me is how easily the interface blends all of the essential functions of docker in a way that just really makes sense even for someone who is relatively new to the whole concept of containerized services and systems. While I do recognize that things may change in their core technology I am willing to take on the additional overhead for the possibility of them creating something that can stand up to the well established industry giants like AWS and Google Cloud Platform.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Nov 2016 00:20:07 -0500</pubDate>
        <link>http://0.0.0.0:4000/check-in/reflections/2016/11/17/google-vs-docker-cloud.html</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/check-in/reflections/2016/11/17/google-vs-docker-cloud.html</guid>
        
        <category>tips</category>
        
        <category>reviews</category>
        
        
        <category>check-in</category>
        
        <category>reflections</category>
        
      </item>
    
      <item>
        <title>My Windows + Linux Toolkit</title>
        <description>&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;
&lt;p&gt;Lately I have been developing extensive amounts of golang code for an API that I am writing for a course for my Project management course and the code is to be deployed to a linux VPS. I also have started up a new job as a part time Linux Systems Administrator and many of my projects involve implementing LDAP login to a Linux based web applications. Due to both of these things I must constantly jump between Windows and Linux on a daily basis.&lt;/p&gt;

&lt;p&gt;The API sits on the same VPS as a SQL server and interacts with it by sending database instructions to it and returns JSON data to the client that is sending the requests. &lt;a href=&quot;http://github.com/derfoh/compromise&quot;&gt;It’s still under development but the project can be found here.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-toolkit&quot;&gt;The toolkit&lt;/h2&gt;
&lt;p&gt;The goal of this post is to outline the toolkit that I use on a daily basis to work on Linux and Windows consecutively.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/atomImage.png&quot; alt=&quot;AtomImage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Atom:
Atom is my editor of choice here for most of my work in developing and editing configurations. Not only is it cross-platform but has a huge amount of packages that are actively maintained by the community. Oh and did I mention that it is &lt;a href=&quot;OpenSource&quot;&gt;https://github.com/atom&lt;/a&gt;?
The pluggins are really where atom shines as you can star these pluggins on their central repository &lt;a href=&quot;http://atom.io&quot;&gt;atom.io&lt;/a&gt; and then with one simple command: &lt;code&gt;apm install --stars&lt;/code&gt; the command line utility goes out and finds your pluggins and loads them into your environment. Then for any individual configurations I simply use a secret github repo or a hidden gist to get the editor into it’s findal state. The real beauty of being able to do these things is that no matter what system or where I am working from I am actually able to carry over most if not all of my customized editing environment without a lot of the weight that tends to come with other editors and IDEs.&lt;/p&gt;

&lt;p&gt;You can see all of the pluggins I use by checking out my &lt;a href=&quot;https://atom.io/users/DerfOh/stars&quot;&gt;atom.io profile&lt;/a&gt;. Many of them are related to specific projects that I am working on. Most notably the ones that I have for golang do things such as code completion, automated testing, linting, go to definitions, and a variety of other amazing features that generally make developing go code a breeze.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/VimImage.png&quot; alt=&quot;VimImage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vim:
I would be remiss if I didn’t take the time to write something about Vim (or vim-enhanced). If Atom was to be my car, vim would be my skateboard. I use the editor almost as much as Atom but generally in smaller increments and swift actions from the command line. It is frequently how I compose my commit messages and any time I need to work on a configuration or just a one off file I often reach for Vim as it is quicker for me and I don’t have to rely on Atom loading up, being installed, or having the proper configurations. While I have spent the time playing with a variety of plugins for Vim, I simply do not need to add the extra cruft to an already perfectly engineered tool.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/GitImage.png&quot; alt=&quot;GitImage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Git and GitHub:
Git is indispensable not only as a utility for tracking changes, deploying code, and allowing for a collaborative workflow. It also is an awesome way to synchronize your workspace and projects across multiple systems. It seems like more and more I find myself with a terminal open somewhere at any moment on my PC that is sitting in a particular project’s directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/cmderImage.png&quot; alt=&quot;cmderImage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;cmder:
cmder is an amazing utility when it comes to using the command line on windows. Not only does it do mintty, it also does bash, powershell, windows cmd, and even ssh. There are multiple tabs you can work from. A million settings to tweak it just how you like it. Plugin support. Cmder even lets you use it in ‘quake mode’ where it comes down from the top of your screen in a fashion that any oldschool PC gamer would appreciate.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/MobaImage.png&quot; alt=&quot;MobaImage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;MobaXterm:
Sometimes keeping track of all my SSH endpoints and keys can be a real pain. MobaXterm acts is an excellent utility that frees me from the grips of PuTTY. I do not use it beyond that function though. I know that even the personal edition does more than I use it for. I really only have use for the personal edition but there is a paid version that allows for a whole extra suite of tools and utilities that can be used as well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/VirtualBoxImage.png&quot; alt=&quot;VirtualBoxImage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;VirtualBox:
I have had a long love-hate relationship with dual booting between Windows and Linux. I finally have thrown in the towell and adopted a virtualized solution. VirtualBox allows me to take the base image of the distribution that my code will eventually live on and develop specifically to that environment. I can even combine this methodology with vagrant and docker to make a powerful develop and deliver 1-2 punch. I use this design flow especially when I am working on some kind of microservice or other single purpose type application. It is really nice being able to jump between projects just by hopping in and out of virtual machines.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/UbuntuImage.png&quot; alt=&quot;UbuntuImage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ubuntu MATE:
Ubuntu MATE is my preferred distribution for a general desktop and development environment. I mainly deploy my personal projects to Ubuntu servers. Ubuntu has done a great job of making Linux a friendly and easy to learn thing through a tasteful design and release methodology and especially due to the amazingly supportive community. The amount of guides and resources that are available for Ubuntu is fantastic too. The MATE desktop environment delivers that classic Gnome feel that I got accommodated to when I was originally cutting my teeth on Linux.&lt;/p&gt;
</description>
        <pubDate>Sun, 13 Nov 2016 09:11:51 -0500</pubDate>
        <link>http://0.0.0.0:4000/check-in/reflections/2016/11/13/windows-and-linux-development.html</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/check-in/reflections/2016/11/13/windows-and-linux-development.html</guid>
        
        <category>podcasts</category>
        
        <category>tips</category>
        
        <category>entertainment</category>
        
        
        <category>check-in</category>
        
        <category>reflections</category>
        
      </item>
    
      <item>
        <title>Project - Vidjatrest</title>
        <description>&lt;h1 id=&quot;check-out-vidjatrest-here&quot;&gt;&lt;a href=&quot;http://vidjatrest.codingwiththeflow.com&quot;&gt;Check out Vidjatrest here&lt;/a&gt;&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;What is the application?
    &lt;ul&gt;
      &lt;li&gt;The application is a pinterest-like application built with Ruby for sharing screenshots and gaming related photos.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;What platform is it for?
    &lt;ul&gt;
      &lt;li&gt;Web&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;What did you learn from making this?
    &lt;ul&gt;
      &lt;li&gt;Model, View, Controller framework&lt;/li&gt;
      &lt;li&gt;Ruby&lt;/li&gt;
      &lt;li&gt;Heroku tools&lt;/li&gt;
      &lt;li&gt;Connecting AWS to a web application using the AWS-SDK&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Where do I get it?
    &lt;ul&gt;
      &lt;li&gt;More information can be found on the github page: &lt;a href=&quot;https://github.com/DerfOh/vidjatrest&quot;&gt;Github - Vidjatrest&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 19 Jun 2016 17:30:57 -0400</pubDate>
        <link>http://0.0.0.0:4000/projects/2016/06/19/vidjatrest.html</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/projects/2016/06/19/vidjatrest.html</guid>
        
        <category>projects</category>
        
        <category>Ruby</category>
        
        <category>Rails</category>
        
        <category>Pinterest</category>
        
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>Great Podcasts - IT &amp; Security</title>
        <description>&lt;p&gt;Next in my series of great podcasts is Information Security. I spend a lot of time in my current job fixing broken computers and part of that involves disinfecting and restoring operating systems back to their fully functional selves.&lt;/p&gt;

&lt;h1 id=&quot;security-and-technology-podcasts&quot;&gt;Security and Technology Podcasts&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.grc.com/securitynow.htm&quot;&gt;Security now&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;Amazing podcast on the world of information security. This podcast not only talks about the major news items that every IT person should know about but also explains very complex concepts in an easy to understand manor. Leo Laporte and Steve Gibson masterfully come together as an unstoppable force to create a wave of understanding for the complex world of info security. Worth a listen if you’re even remotely interested in what is going on in the technology and security. Episodes come out weekly and are typically an hour long but sometimes can run as long as a couple hours.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL8mG-RkN2uTw7PhlnAr4pZZz2QubIbujH&quot;&gt;The WAN show&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;If you’re fan of Linus tech tips you will imediately recognize the hosts of this show. From the makers of that incredibly informative youtube show comes a tech news show that is totally worth your time. A huge variety of topics are covered in their podcast, from any hardware and software releases to some amazing life advice this podcast is full of great knowledge and will keep you up to date with the latest and greatest in the ever changing world of tech.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://hak5.org/&quot;&gt;hak5&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;This one has been around for years. Devin Kitchen and Shannon Moore cover a huge variety of tweaks, hacks, and other cool gadgetry. Its important to note that this show is not a typical security show as they cover far more topics than just security news. They have a variety of tutorials that range from things like basic command line usage, drone building, using Linux operating systems, programming and many, many more.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.hackedpodcast.com/&quot;&gt;Hacked&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;This one is great for beginners (and there are some goodies for the experts). Jordan and Scott talk about the ways things tend to go wrong and what can happen if someone gets hacked. Each episode is between 15 to 30 minutes. It appears that they’re on hiatus however as their episode posting is very  infrequent. Great listen though if your just looking for a quick episode to fill in.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 16 May 2016 12:17:04 -0400</pubDate>
        <link>http://0.0.0.0:4000/check-in/2016/05/16/great-podcasts-information-security.html</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/check-in/2016/05/16/great-podcasts-information-security.html</guid>
        
        <category>podcasts</category>
        
        <category>tips</category>
        
        <category>entertainment</category>
        
        
        <category>check-in</category>
        
      </item>
    
      <item>
        <title>Great Podcasts - Programming</title>
        <description>&lt;p&gt;As I spend time working on my projects I often need something to fill the backround noise. One of the ways I do this is by listening to podcasts. I feel that podcasts while entertaining also provide some educational value and allow me to not get too buried by my focus while learning something new. Not only do these podcasts enlighten me to new ideas and topics but also really help to supplement the long commute that I have.&lt;/p&gt;

&lt;p&gt;To kick off my series of posts I will post the programming podcasts that I listen to while I drive and while I work.&lt;/p&gt;

&lt;h1 id=&quot;programming&quot;&gt;Programming&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://developertea.com&quot;&gt;Developer Tea&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;Great podcast for anyone interested in being a productive programmer. They offer tips and techniques for getting things done and being productive in your day as a programmer. The episodes are relatively short (20-30 minutes), and typically there are 1 to 2 episodes per week. Jonathan often interviews industry experts and gets their insight and opinions on a multitude of issues.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;www.codenewbie.org&quot;&gt;Code Newbie&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;Yet another great podcast for new programmers. Like developer tea, Saran interviews many industry professionals about their skills and techniques. This podcast goes on a bit more about the culture of the tech industry, it hits on a multitude of issues from equality in the workplace and in the coding community. Episodes are typically 20-30 minutes but sometimes are longer when it’s necessary. New episodes tend to come out on a weekly basis.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.dotnetrocks.com/&quot;&gt;.Net Rocks&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;A great podcast for more than just .net. While a lot of the focus is on Windows application development it spans a broad set of frameworks and coding methodologies as well as hitting on the latest news in the programming and Windows world. Episodes tend to be longer, around an hour long and typically come out on a weekly basis.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.programmingthrowdown.com/&quot;&gt;Programming Throwdown&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;This podcast spans a wide variety of different languages and technologies in the field. Anything from python to tamper protection are covered in this podcast and often times the hosts go into great detail on the things they plan on talking about. Episodes are typically an hour long but sometimes can be shorter or longer depending on the topic being covered and they generally come out on a monthly basis.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://5by5.tv/changelog&quot;&gt;The Changelog&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;Great podcast that goes over a variety of topics in the open source world. Adam and Jerod go over the newest topics and news and do an awesome job of highlighting what is popular in the open source coding scene. This podcast is also a great resource on information on amazing self hosted applications as well as great open source tools. Worth a listen if you’re interested in how everything works in land of open source software. Episodes are typically just over an hour long and come out on a bi-monthly basis.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 23 Apr 2016 12:48:20 -0400</pubDate>
        <link>http://0.0.0.0:4000/check-in/2016/04/23/great-podcasts-programming.html</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/check-in/2016/04/23/great-podcasts-programming.html</guid>
        
        <category>podcasts</category>
        
        <category>tips</category>
        
        <category>entertainment</category>
        
        
        <category>check-in</category>
        
      </item>
    
      <item>
        <title>Raspberry Pi Projects</title>
        <description>&lt;p&gt;If you live under a rock or just do not know what a Raspberry Pi is it is a small “Micro” computer that is relatively low cost that runs Linux operating systems such as Debian using an ARM processor.&lt;/p&gt;

&lt;p&gt;I get asked a lot about what I use my Raspberry Pis for so I figured I would compile a list of the different projects and applications that I run on them.&lt;/p&gt;

&lt;p&gt;I currently own 4 Pis. Two are Raspberry Pi 2s, One Raspberry Pi 1, and one Raspberry Pi 0.&lt;/p&gt;

&lt;p&gt;For the Raspberry Pi 2s I use one as a dedicated VPN end point into my home network. The idea is that when I’m on the road I want to be able to tunnel my traffic through an encrypted connection back to my house then out to the Internet in an attempt to keep potential malicious actors from sniffing my traffic and doing what they will with it. I also have that Pi set up as a LAMP server for when I need to test a deployment of a website before I publish it onto the Internet. Along with the LAMP server and VPN I also have it set up as a client for the popular Lounge IRC client for when I need to get into an IRC room to ask questions or contribute to a conversation. Finally the last thing I use this Pi for is as a custom DNS server that blocks advertisements for all the devices on my home network using the Pi-Hole application.&lt;/p&gt;

&lt;p&gt;The other Pi 2 is being used as a Retro Pi/Kodi System. Essentially it is a conglomeration of many popular video game system emulators for when I am seeking out some of that sweet nostalgic gaming from yesteryear. Kodi also adds a very flexible and powerful media center application. I use this for a mainly watching Movies/TV, youtube, twitch streams, and podcasts. It also acts as an RSS reader and keeps me informed on what the weather is in a few different locations. This Pi also runs an SMB server so that any device on the network can access any saved media files on it for their own.&lt;/p&gt;

&lt;p&gt;The Raspberry Pi 1 is being used as a hub for a couple cameras. I use this as a home security system that takes still images whenever it detects motion. It then sends me a digest in an email daily of what it captured.&lt;/p&gt;

&lt;p&gt;Finally I am still working on what I want to do with the Raspberry Pi 0. I have played with the idea of using it as an on the go DNS black-hole for blocking advertisements when I’m on the road. I’m sure I will come up with a practical use for it that capitalizes on its extremely small form factor.&lt;/p&gt;

&lt;p&gt;Here’s a compiled list of all the tools/applications used with the pis:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Nyr/openvpn-install&quot;&gt;Open VPN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://elinux.org/RPi_A_Simple_Wheezy_LAMP_install&quot;&gt;PI LAMP Server Tutorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/thelounge/lounge&quot;&gt;The Lounge IRC Client&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pi-hole.net/&quot;&gt;Pi-Hole Ad Blocker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/retropie/retropie-setup/wiki&quot;&gt;Retro Pi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mymediaexperience.com/raspberry-pi-xbmc-with-raspbmc/&quot;&gt;Kodi&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ccrisan/motioneye/wiki/Install-On-Raspbian&quot;&gt;Motion Eye&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have any further questions regarding my setup feel free to leave me a comment below!&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Apr 2016 18:41:12 -0400</pubDate>
        <link>http://0.0.0.0:4000/raspberry%20pi/projects/2016/04/02/raspberry-pi-projects.html</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/raspberry%20pi/projects/2016/04/02/raspberry-pi-projects.html</guid>
        
        <category>projects</category>
        
        
        <category>Raspberry Pi</category>
        
        <category>Projects</category>
        
      </item>
    
      <item>
        <title>Added School Projects to GitHub</title>
        <description>&lt;p&gt;Added a lot of my school programming projects to my GitHub.&lt;/p&gt;

&lt;p&gt;Check out the repository here: &lt;a href=&quot;https://github.com/DerfOh/School-Programming-Projects&quot;&gt;School-Programming-Projects&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is also worth mentioning that I uploaded the code for  &lt;a href=&quot;http://undeaddata.derfoh.me&quot;&gt;Undead Data&lt;/a&gt; to a repository as well. I had to figure out the GNU GPL for this one. I hope if there is any issue with how I implemented the license into the source someone will mention it to me.&lt;/p&gt;

&lt;p&gt;The intent behind licensing with the GPL was so that everyone who worked on the project could get equal credit for their contributions if any of us decide to use it for a portfolio or application that might result in a change in the intellectual property. My group members and I put a lot of work into getting everything together for the site to demonstrate our mastery of the knowledge gained from out database design course.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Mar 2016 20:05:51 -0400</pubDate>
        <link>http://0.0.0.0:4000/check-in/2016/03/17/school-projects-now-on-github.html</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/check-in/2016/03/17/school-projects-now-on-github.html</guid>
        
        <category>projects</category>
        
        
        <category>check-in</category>
        
      </item>
    
      <item>
        <title>Fallout 4 Enable Mods Script</title>
        <description>&lt;ul&gt;
  &lt;li&gt;What is the application?
    &lt;ul&gt;
      &lt;li&gt;The application is a small script that when run properly on a fresh install of Fallout 4 enables the user to start downloading and installing modified content into their game. I made this script because I was tired of having to do this over and over for myself as well as friends and family. This script provides a simple set of instructions to the user directing them to place it in the appropriate folder and then run it. It then makes the appropriate changes to the ini files of the game to allow modified content to be loaded properly.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;What platform is it for?
    &lt;ul&gt;
      &lt;li&gt;This script is only compatible with Windows operating systems.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;What did you learn from making this?
    &lt;ul&gt;
      &lt;li&gt;While I understood these things it provided an oportunity for me to reivew how to copy, make, and edit files using a batch script.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Where do I get it?
    &lt;ul&gt;
      &lt;li&gt;The script can be obtained from one of two sources:
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://github.com/DerfOh/EnableFalloutModsScript&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;http://www.nexusmods.com/fallout4/mods/10496/&quot;&gt;Nexus&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 02 Mar 2016 19:54:20 -0500</pubDate>
        <link>http://0.0.0.0:4000/2016/03/02/fallout-4-enable-mods-script.html</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/2016/03/02/fallout-4-enable-mods-script.html</guid>
        
        <category>projects</category>
        
        <category>video games</category>
        
        
        <category></category>
        
      </item>
    
      <item>
        <title>Changes to 841g site</title>
        <description>&lt;p&gt;Lately I have been working on getting a website I made for a gaming comunity moved over to github pages. A lot of the sites that I have thrown together really only have basic needs in terms of the capability of what is required on the back end. As for web servers however after years of doing things such as trying to navigate a cPanel with millions of different functions spread haphazardly, to manually implementing a LAMP stack (or rather a LAP stack as I didn’t have much use for SQL until recently). I have found that at this point it is worth learning the way GitHub hosts their pages if your primary goal is to just make a basic site for a club or a group.&lt;/p&gt;

&lt;p&gt;That being said we have changed much of the design at the site (you can check it out &lt;a href=&quot;http://841g.github.io&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;In our case me (and another community manager) created an organization to keep things simpler when it came to both of us working on the site. It had become troublesome to get his fork up to date every time a pull needed to be made between the forks. We are both hoping that commiting to the same repo will simplify things.&lt;/p&gt;

&lt;p&gt;I’m not sure though if for just us two this is more of a “nuclear option” and that it might be a bit overkill for just a small team. I wonder what aproaches other people generally take for this. For now though this works for us and hopefully if there are eventually more coding projects added under the org it will allow us to scale better as we get more members. I plan to eventually move a few of the bots that we use in our various group chats the group uses under the organization too in hopes that other members decide to work on them.&lt;/p&gt;
</description>
        <pubDate>Wed, 17 Feb 2016 17:27:32 -0500</pubDate>
        <link>http://0.0.0.0:4000/check-in/2016/02/17/changes-to-841g-site.html</link>
        <guid isPermaLink="true">http://0.0.0.0:4000/check-in/2016/02/17/changes-to-841g-site.html</guid>
        
        <category>webdesign</category>
        
        <category>projects</category>
        
        
        <category>check-in</category>
        
      </item>
    
  </channel>
</rss>
